#include <stdio.h>
#include <time.h>
#include <stdlib.h>

#define num_references 10
#define num_frames 4

int reference_string[100];
int frames[4];

void fifo_page_replacement(); 
void lru_page_replacement(); 
void optimal_page_replacement(); 
int isPresent(int);

int main()
{
    int low=0,high=9; //set low =0 and high =9 for range of random numbers
    srand(time(0));
    int j=0;//initialize j to 0
    for (int i=0;i<num_references;i++)  //genearate "num_references" number of random numbers
    {
        //copy each random number of reference_string array
        reference_string[j++] = (rand()%(high-low+1))+low;
    }
    printf("\nThe reference string is :"); //print reference string
    for (int i=0;i<num_references;i++) 
        printf("%d ",reference_string[i]);
    printf("\nThe number of frames = %d",num_frames); //print number of frames
    fifo_page_replacement(); //call fifo
    lru_page_replacement(); //call lru
    optimal_page_replacement(); //call optimal page replacement
    return 0;

}
void fifo_page_replacement()
{
    int k;
    printf("\n\nFIFO - First In First Out Page Replacement\n");
     printf("______________________________________________\n");
   
    int PF_count=0; //initialize number of page faults to 0
    for(int i=0; i<num_frames; i++) //initialize the frames to -1 to indicate empty
        frames[i]=-1;
    for(int i=0; i<num_references; i++) //for each page in reference string
    {
        printf("\n%d",reference_string[i]); //print page referred
        if(isPresent(reference_string[i])==0) //if page not present already
        {
            printf("- Fault"); //print page fault
            for(k=0;k<num_frames-1; k++)
                frames[k]=frames[k+1]; //shift all pages one psoition left to insert new page so that first came page is removed
            frames[k]=reference_string[i]; //insert new page 
            PF_count++; //increment page fault count
        }
        else //if page already present
            printf("- Hit  "); //print page hit
        for (int i=0;i<num_frames;i++) //print pages in frames
                printf(" %d ",frames[i]);
    }
    //print number of page faults
    printf("\n\nNumber page faults:%d\n",PF_count);
}
 
 
